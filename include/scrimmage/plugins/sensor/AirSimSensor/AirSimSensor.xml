<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="http://gtri.gatech.edu"?>
<params>
  <library>AirSimSensor_plugin</library>

  <!--
    The ``airsim_ip`` and ``airsim_port`` XML tags can be used to connect
    to an AirSim instance on either the local computer or a remote networked
    computer(the second machine(Linux or Windows) used to run Unreal/AirSim). If Unreal/AirSim
    is being ran on the same machine as SCRIMMAGE/AirSim then the ``airsim_ip`` should be set
    to the Local Host IP (usually 127.0.0.1). These tags can also be set in the quad-airsim-ex1.xml
    mission file, ``airsim_ip`` is set there by default and overwrites the setting in AirSimSensor.xml.
  -->
  <airsim_ip>127.0.0.1</airsim_ip>
  <airsim_port>41451</airsim_port>
  <airsim_timeout_s>60</airsim_timeout_s>


  <!-- Camera sensor configurations **MUST** match the settings on the AirSim settings.json file or you will receive
       an RPC error.

      [VehicleName=robot1 CameraName=front_center ImageTypeName=Scene Width=256 Height=144 FOV=60]

      AirSim Vehicle Name: User chosen vehicle name set in settings.json file under Vehicles

      AirSim Camera Name: User chosen name for a camera on a vehicle. Set in settings.json file under "Cameras" for each vehicle.
                          Names must be unique, lowercase, and have no spaces. Pose of camera must also be set below.

      AirSim ImageTypeName: These are different camera "lenses" that make a camera, specified by the camera name,
                            return images of a certain image type from the simulation. A single camera can return images
                            in multiple image types.
                            ImageType Options:
                            Scene, DepthPlanner, DepthPerspective, DepthVis, DisparityNormalized, Segmentation,
                            SurfaceNormals, Infrared

      Image Pixels = Width, Height

      FOV = camera field of view - integer, degrees
  -->
  <camera_config>
    [robot1 front_center Scene 256 144 90]
    [robot1 front_center DepthPerspective 256 144 90]
    [robot1 front_center Segmentation 256 144 90]
    [robot1 front_center Infrared 256 144 90]

    [robot2 front_center Scene 256 144 90]
    [robot2 front_center DepthPerspective 256 144 90]
    [robot2 front_center Segmentation 256 144 90]
    [robot2 front_center Infrared 256 144 90]
  </camera_config>

  <!-- Pose of cameras on vehicle in relation to center of vehicle body. Each camera has its own camera name and pose.
        The pose must match what is specified in the settings.json file for the CameraName set under "Cameras". The pose
        in the settings.json file is in NED frame, place the camera pose in NED here as well. Do not use repeat camera
        names on a vehicle. All names must be lowercase and have no spaces.
        X, Y, Z = meters
        Roll, Pitch, Yaw = degrees

   [VehicleName=robot1 CameraName=front_center X=0.0 Y=0.0 Z=0.0 Roll=0.0 Pitch=0.0 Yaw=0.0]
   -->
  <camera_pose_NED>
    [robot1 front_center 2.0 3.0 1.0 0.0 0.0 0.0]

    [robot2 front_center 0.0 0.0 0.0 0.0 0.0 0.0]
  </camera_pose_NED>

  <!--
      [VehicleName LidarName X=0.0 Y=0.0 Z=0.0 Roll=0.0 Pitch=0.0 Yaw=0.0]
      Define relationship between multiple robots and LIDARs, need 1 for each LIDAR in simulation.

      LIDAR pose must match what is set in settngs.json file (NED), specify in NED here as well.
      X, Y, Z = meters
      Roll, Pitch, Yaw = degrees
  -->

  <lidar_config>
    [robot1 lidar1 0.0 0.0 0.0 0.0 0.0 0.0]

    [robot2 lidar1 0.0 0.0 0.0 0.0 0.0 0.0]
  </lidar_config>

  <!--
      [VehicleName ImuName X=0.0 Y=0.0 Z=0.0 Roll=0.0 Pitch=0.0 Yaw=0.0]
      Define relationship between multiple robots and imus, need one for each imu in simulation

      IMU pose must match what is set in settngs.json file (NED), specify in NED here as well.
      X, Y, Z = meters
      Roll, Pitch, Yaw = degrees
  -->
  <imu_config>
    [robot1 imu1 0.0 0.0 0.0 0.0 0.0 0.0]

    [robot2 imu1 0.0 0.0 0.0 0.0 0.0 0.0]
  </imu_config>


  <!-- Edit the params below in the mission file, not here -->

  <!-- save_airsim_data saves all images and a CSV of quaternion pose values to scrimmage logs-->
  <save_airsim_data>true</save_airsim_data>
  <!-- get_image_data requests image data from AirSim -->
  <get_image_data>true</get_image_data>
  <!-- get_lidar_data requests lidar data from AirSim -->
  <get_lidar_data>true</get_lidar_data>
  <!-- get_imu_data requests imu data from AirSim -->
  <get_imu_data>true</get_imu_data>

  <!-- data_acquisition_period determines the number of times data is requested from AirSim per second -->
  <!-- 0.1 => 1000ms/(0.1*1000ms) = 10 times per second -->
<!--  <data_acquisition_period>0.1</data_acquisition_period>-->
  <image_acquisition_period>0.1</image_acquisition_period>
  <lidar_acquisition_period>0.1</lidar_acquisition_period>
  <imu_acquisition_period>0.1</imu_acquisition_period>

  <vehicle_name>"robot1"</vehicle_name>

</params>
